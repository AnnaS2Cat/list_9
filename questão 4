/*O preço dos produtos em uma loja de aeroporto pode ser exibido em reais, dólares ou euros.
Crie um tipo de dados Preco que permita três representações e identifique o subtipo em uso.
Crie uma função exibe que receba um dado do tipo Preco e exiba o valor e a moeda.
Crie uma função altera que receba um preço e altere-o para o subtipo passado. Use a função exibe para verificar se a conversão está correta.*/
#include <stdio.h>
#include <stdio.h>

// Definição dos tipos de moeda
enum TipoMoeda {
    REAL,
    DOLAR,
    EURO
};

// Union para armazenar o valor (uma moeda de cada vez)
union Valor {
    float real;
    float dolar;
    float euro;
};

// Struct para representar um preço com tipo de moeda
struct Preco {
    enum TipoMoeda tipo;
    union Valor val;
};

// Função para exibir o preço com base no tipo de moeda
void exibe(struct Preco p) {
    if (p.tipo == REAL) {
        printf("Preço: R$ %.2f (Real)\n", p.val.real);
    } else if (p.tipo == DOLAR) {
        printf("Preço: US$ %.2f (Dólar)\n", p.val.dolar);
    } else if (p.tipo == EURO) {
        printf("Preço: € %.2f (Euro)\n", p.val.euro);
    } else {
        printf("Tipo de moeda desconhecido.\n");
    }
}

// Função para converter o preço para outro tipo de moeda
struct Preco altera(struct Preco p, enum TipoMoeda novoTipo) {
    float valorEmReais;

    // Converte o valor atual para reais
    if (p.tipo == REAL) {
        valorEmReais = p.val.real;
    } else if (p.tipo == DOLAR) {
        valorEmReais = p.val.dolar * 5.00; // Exemplo: 1 dólar = R$ 5,00
    } else if (p.tipo == EURO) {
        valorEmReais = p.val.euro * 5.50; // Exemplo: 1 euro = R$ 5,50
    } else {
        printf("Tipo de moeda inválido para conversão.\n");
        valorEmReais = 0;
    }

    // Converte de reais para o novo tipo de moeda
    struct Preco novoPreco;
    novoPreco.tipo = novoTipo;

    if (novoTipo == REAL) {
        novoPreco.val.real = valorEmReais;
    } else if (novoTipo == DOLAR) {
        novoPreco.val.dolar = valorEmReais / 5.00;
    } else if (novoTipo == EURO) {
        novoPreco.val.euro = valorEmReais / 5.50;
    } else {
        printf("Tipo de moeda inválido para conversão.\n");
    }

    return novoPreco;
}

// Função principal para testar
int main(void) {
    struct Preco p;

    // Definindo um preço em dólar
    p.tipo = DOLAR;
    p.val.dolar = 10.0;

    printf("Preço original:\n");
    exibe(p);

    // Converte para euro
    struct Preco convertido = altera(p, EURO);
    printf("Convertido para Euro:\n");
    exibe(convertido);

    // Converte para real
    struct Preco convertido2 = altera(p, REAL);
    printf("Convertido para Real:\n");
    exibe(convertido2);

}
